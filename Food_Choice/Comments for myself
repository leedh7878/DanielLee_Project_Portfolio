1. There's difference in how Jupyter Notebook and the Python interpreter handle file paths.

- Python: the current working directory is the directory from where the script is executed. ./

- jupyter notebook: the current working directory is set to the directory where the notebook file is located. ../


* REFERENCE:

https://medium.com/bitgrit-data-science-publication/data-cleaning-with-python-f6bc3da64e45

https://towardsdatascience.com/master-the-most-hated-task-in-ds-ml-3b9779276d7c



Jupyter notebook Tips:

ALT + Arrow down/up to move cell


comment for data_cleaning_practice.ipynb:

When you use .loc to assign a value to a slice of a DataFrame, it attempts to align the dimensions of the assigned value with the dimensions of the slice being modified. If the dimensions don't match, a ValueError is raised to ensure consistency.

On the other hand, .at is designed for scalar assignment, meaning it expects a single value to be assigned to a specific location in the DataFrame. It does not perform alignment or attempt to match dimensions. Therefore, if you use .at to assign a value to a slice of a DataFrame, it treats the entire slice as a single location and assigns the value accordingly, without raising an error.


pandas.plot

kindstr
The kind of plot to produce:

‘line’ : line plot (default)

‘bar’ : vertical bar plot

‘barh’ : horizontal bar plot

‘hist’ : histogram

‘box’ : boxplot

‘kde’ : Kernel Density Estimation plot

‘density’ : same as ‘kde’

‘area’ : area plot

‘pie’ : pie plot

‘scatter’ : scatter plot (DataFrame only)

‘hexbin’ : hexbin plot (DataFrame only)